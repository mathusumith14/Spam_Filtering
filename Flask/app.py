# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1th28zOr4I48H_1h4Ec-lYpOVPIPt3hzL
"""

#model.save('spam.h5')

# Importing essential libraries
from flask import Flask, render_template,request
import pickle
import numpy as np
import re
import nltk
from nltk.corpus import stopwords
#from nltk.stem import PorterStemmer
#from tensorflow.keras.models import load_model
# load the Multinomial Naive Baves model and CountVector

# install pyngrok
!pip install pyngrok

# import ngrok
from pyngrok import ngrok

app = Flask(__name__)

ngrok.set_auth_token("2OJRafYleKDu8zEH8Wv8KXZImCR_7nXCxLx76jN9wTTRJrsJA")
public_url=ngrok.connect(5000)
print("url:,public_url")
#cv=pickle.load(open('cv1.pkl','rb'))

#@app.route('/')# rendering the html template
#def home():
 # return render_template('home.html')

#@app.route('/spam',methods=['POST','GET'])
#def prediction(): #route which will take you to the prediction page
#return render_template('spam.html')
#@app.route('/predict',methods=['POST'])
#def predict():
 #if request.method =='POST':
    #message = request.from['message']
    #data=message
    #new review=str(data)
    #print(new_review)
    #new_review=re.sub('[^a-zA-Z]',' ',new_review)
    #new_review=new_review.lower()
    #new_review=new_review.split()
    #ps=PorterStemmwe()
    #all_stopwords=stopwords.words('enlish')
    #all_stopwords.remove('not')
    #new_review=' '.join(new_review)
    #new_corpus=[new_review]
    #new_X_test=cv.transform(new_corpus).toarray()
    #print(new_x-test)
    #new_y_pred=loated_model.predict(new_x_test)
    #new_x_pred=np.where(new_y_pred>0.5,1,0)
    #print(new_x_pred)
    #if new_review[0][0]==1:
     # return render_template('result.html', prediction="spam")
      #else:
       # return render_template('result.html', prediction="Not a spam")

#if __name__=="__main__":
  # app.run(host='0.0.0.0', port=8000,debug=True)     # running the app
   #  port=int(os.environ.get('PORT',5000))
  #app.run(debug=Flase)